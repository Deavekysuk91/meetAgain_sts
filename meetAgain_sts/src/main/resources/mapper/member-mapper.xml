<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

<select id="checkNnDuplicate" parameterType="hashmap" statementType="CALLABLE">
	{ CALL NN_DUP_CHK(
            #{nickName, mode=IN, jdbcType=VARCHAR}, 
	        #{result, mode=OUT, jdbcType=NUMERIC, javaType=integer} ) 
	 }
</select>

<update id="mUpdate" parameterType="string">
UPDATE MEMBER SET
ADDRESS1=#{address1}, ADDRESS2=#{address2}, ADDRESS3=#{address3}, NICKNAME=#{nickName}, PHONE=#{phone}
WHERE USERID=#{userId}
</update>

	<select id="selectOne" parameterType="string" resultType="Member">
		SELECT * FROM MEMBER WHERE EMAIL = #{email}
	</select>
	
	<update id="mTMIUpdate" parameterType="UserTMI">
		UPDATE USERTMI SET BLOOD=#{blood}, MBTI=#{mbti}, KEYWORD=#{keyword}, USERIMG=#{userImg}
		WHERE USERID=#{userId}
	</update>
	
	<insert id="mCateUpdate" parameterType="CateInfo">
	
		INSERT INTO CATEINFO VALUES(#{userId}, #{category})
	
	</insert>
	
	<select id="selectOneTMI" parameterType="string" resultType="UserTMI">
		SELECT * FROM USERTMI JOIN MEMBER USING(USERID) WHERE EMAIL=#{email}
	</select>

<insert id="insertMember" parameterType="Member">
INSERT INTO MEMBER VALUES(SEQ_USERID.NEXTVAL, #{userName}, #{address1}, DEFAULT, DEFAULT, 
#{nickName}, #{birthday}, #{gender}, #{email}, #{phone}, DEFAULT, DEFAULT, DEFAULT, 
DEFAULT, DEFAULT, DEFAULT,DEFAULT, DEFAULT)
</insert>
</mapper>