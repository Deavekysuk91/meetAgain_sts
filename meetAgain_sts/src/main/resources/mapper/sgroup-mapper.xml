<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sgroupMapper">
	<resultMap type="Sgroup" id="sgroupMap">
		<id property="gId" column="GID" />
		<result property="cateId" column="CATE_ID" />
		<result property="limitGroup" column="LIMITGROUP"
			typeHandler="Str2ArrayHandler" />
	</resultMap>

	<insert id="insertSgroup" parameterType="Sgroup">
		INSERT ALL INTO
		SGROUP(GID, CATE_ID, GTITLE, GIMG, GINTRO, CREATEDATE,
		MAXNUM, CHARGE,
		GFEE, GPLACE, GTYPE, DURATE, ISFIN, GPWD, JOINTYPE,
		LIMITGROUP)
		VALUES(SEQ_GID.NEXTVAL, #{cateId}, #{gTitle}, #{gImg}, #{gIntro},
		DEFAULT, #{maxNum},
		#{charge}, #{gFee}, #{gPlace},
		#{gType}, #{durate},
		DEFAULT, #{gPwd}, #{joinType}, #{limitGroup,
		typeHandler=Str2ArrayHandler})

		INTO JOING(USERID, GID, ISCPT, ISREADY,
		ISOUT, ISLEAVE)
		VALUES(#{userId}, SEQ_GID.CURRVAL, 'Y', 1, DEFAULT,
		DEFAULT)
		SELECT * FROM DUAL
	</insert>

	<select id="selectListSgroup" resultMap="sgroupMap">
		SELECT * FROM SGROUP
		ORDER BY DURATE DESC
	</select>

	<select id="selectOneSgroup" parameterType="string"
		resultMap="sgroupMap">
		SELECT * FROM SGROUP
		WHERE GID = #{gId}
	</select>


	<select  id="selectCateInfo" parameterType="string" resultType="CateInfo">
	  SELECT  C.CATE_ID, G.* FROM CATEINFO C
      JOIN SGROUP G ON(C.CATE_ID=G.CATE_ID) 

      WHERE C.USERID = #{userId} AND G.GID NOT IN(SELECT GID FROM (SELECT * FROM JOING WHERE USERID = #{userId})) AND ISFIN='N'
	</select>

	<select id="selectJoing" parameterType="string"
		resultType="Joing">
		SELECT J.*, M.BIRTHDAY, M.GENDER, M.NICKNAME FROM JOING J
		JOIN MEMBER M ON(J.USERID=M.USERID)
		WHERE GID = #{gId} AND ISLEAVE='N'
	</select>

	<select id="selectJoingUser" parameterType="string"
		resultType="Joing">
		SELECT * FROM JOING
		WHERE USERID = #{userId} AND ISLEAVE='N' AND ISOUT='N'
	</select>


	<select id="selectGroupCount" parameterType="string" resultType="_int">
	   SELECT COUNT(*) 
      	FROM JOING
       WHERE USERID= #{userId} AND ISLEAVE='N' AND ISOUT='N'
      GROUP BY USERID
	</select>

	<insert id="insertGroupJoin" parameterType="Joing">
		INSERT INTO JOING VALUES(#{userId}, #{gId}, 'N',
		<choose>
			<when test='joinType=="C"'>
				2,
			</when>
			<otherwise>
				1,
			</otherwise>
		</choose>
		DEFAULT, DEFAULT)
	</insert>

	<update id="groupLeave" parameterType="hashmap">
		UPDATE JOING SET ISLEAVE = 'Y' WHERE USERID = #{userId} AND GID = #{gid}
	</update>

	<resultMap type="Gboard" id="gboardMap">
		<result property="gbId" column="GBID" />
		<result property="gbTitle" column="GBTITLE" />
		<result property="gbContent" column="GBCONTENT"></result>
	</resultMap>

	<insert id="insertgBoard">
		INSERT INTO GBOARD
		VALUES
		(SEQ_GBID.NEXTVAL, #{gId}, #{userId},
		#{gbTitle},
		#{gbContent}, DEFAULT, DEFAULT, DEFAULT,
		DEFAULT, DEFAULT)
		<!-- 전달한 board객체의 boardNo 프로퍼티에 결과값을 담는다. -->
		<selectKey keyProperty="gbId" resultType="_int"
			order="AFTER">
			SELECT SEQ_GBID.CURRVAL FROM DUAL
		</selectKey>
	</insert>

	<select id="selectgBoardList" resultType="Gboard">
		SELECT GBID, NICKNAME,
		GBTITLE, GBRATE, GBDATE
		FROM GBOARD JOIN MEMBER
		USING(USERID) WHERE
		GID =
		#{gId} AND
		GBDEL='N' ORDER BY
		GBID DESC
	</select>

	<select id="selectgBoardTotalContent" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM GBOARD WHERE GID=#{gId}
	</select>

	<select id="selectOnegBoard" parameterType="_int"
		resultType="Gboard">
		SELECT * FROM GBOARD WHERE GBID=#{gbId}
	</select>

	<update id="updategBoard" parameterType="Gboard">
		UPDATE GBOARD SET
		GBTITLE = #{gbTitle}, GBCONTENT=#{gbContent} WHERE GBID=#{gbId}
	</update>

	<update id="updateReadCount" parameterType="_int">
		UPDATE GBOARD SET
		GBRATE = GBRATE+1 WHERE GBID=#{gbId}
	</update>

	<delete id="deletegBoard" parameterType="_int">
		DELETE FROM GBOARD
		WHERE
		GBID = #{gbId}
	</delete>

	<insert id="insertComment" parameterType="GB_comment">
		INSERT INTO
		GB_COMMENT
		VALUES(SEQ_CID.NEXTVAL, #{gbId}, #{userId}, DEFAULT, #{cContent},
		#{cRef}, #{cLevel}, #{cRec}, #{cDel})
	</insert>

	<select id="selectCommentList" parameterType="_int"
		resultType="GB_comment">
		SELECT C.*, (SELECT USERID
		FROM MEMBER M WHERE
		C.USERID=M.USERID)
		FROM GB_comment C
		WHERE GBID = #{gbId} AND CDEL = 'N'
		START WITH
		CLEVEL = 1
		CONNECT BY PRIOR CID = CREF
	</select>

	<update id="updateComment" parameterType="GB_comment">
		UPDATE GB_COMMENT SET CCONTENT = #{cContent}
		WHERE CID = #{cId}
	</update>
	
	<update id="deleteComment" parameterType="_int">
		UPDATE GB_COMMENT SET CDEL = 'Y' 
               WHERE CID = #{cId}
	</update>
</mapper>